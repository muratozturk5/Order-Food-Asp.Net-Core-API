#pragma checksum "C:\Users\EarthApp\source\repos\OrderFoodAPI\OrderFoodAPI\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "68e7117dc098fd4285feb108e760fcf1aae0c585"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\EarthApp\source\repos\OrderFoodAPI\OrderFoodAPI\Views\_ViewImports.cshtml"
using OrderFoodAPI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"68e7117dc098fd4285feb108e760fcf1aae0c585", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"21ea41b7e59b5ec85073e766d61973823d344e46", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\n\n<html lang=\"en\" class=\"light\">\n<!-- BEGIN: Head -->\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "68e7117dc098fd4285feb108e760fcf1aae0c5853631", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"">
    <link href=""dist/images/logo.svg"" rel=""shortcut icon"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <title>LiwaSoft OrderFoodAPI Kontrol Merkezi</title>
    <!-- BEGIN: CSS Assets-->
    <link rel=""stylesheet"" href=""dist/css/app.css"" />
    <!-- END: CSS Assets-->
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "68e7117dc098fd4285feb108e760fcf1aae0c5854233", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.4/lottie.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.7/lottie.min.js"" integrity=""sha512-HDCfX3BneBQMfloBfluMQe6yio+OfXnbKAbI0SnfcZ4YfZL670nc52Aue1bBhgXa+QdWsBdhMVR2hYROljf+Fg=="" crossorigin=""anonymous""></script>
    <script src=""//cdn.jsdelivr.net/npm/sweetalert2@11""></script>

    <style>

        .fadeback {
            width: 100%;
            height: 100%;
            background-color: rgba(21, 32, 43, 0.54);
            align-items: center;
            z-index: 90000;
            display: none;
            position: fixed;
            text-align: center;
        }

        .center-screen {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            min-height: 100vh;
        }

        .content-wrapper {
            padding-left: 2rem;
            padding-right: 2rem;
        ");
                WriteLiteral(@"    padding-top: 0.75rem;
        }

        .customSwalBtn {
            background-color: rgba(214,130,47,1.00);
            border-left-color: rgba(214,130,47,1.00);
            border-right-color: rgba(214,130,47,1.00);
            border: 0;
            border-radius: 3px;
            box-shadow: none;
            color: #fff;
            cursor: pointer;
            font-size: 17px;
            font-weight: 500;
            margin: 30px 5px 0px 5px;
            padding: 10px 32px;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n<!-- END: Head -->\n\n\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "68e7117dc098fd4285feb108e760fcf1aae0c5857640", async() => {
                WriteLiteral(@"
    <div id=""disable_div_menu"" class=""center-screen fadeback"" style=""position:fixed;display:none;z-index:10"">
        <div id=""icon-container""></div>
    </div>
    <div class=""content-wrapper"">
        <div class=""wrapper"">

            <div class=""wrapper-box"">

                <!-- BEGIN: Content -->
                <div class=""content"">
                    <div class=""grid grid-cols-12 "">
                        <div class=""col-span-12"">
                            <h2 class=""intro-y text-2xl font-medium mt-10 text-center mr-auto"">
                                OrderFoodAPI Kontrol Merkezi
                            </h2>
                            <!-- BEGIN: Pricing Tab -->
                            <div class=""intro-y flex justify-center mt-6"">
                                <div class=""pricing-tabs nav nav-tabs box rounded-full overflow-hidden"" role=""tablist""> <a id=""outgoing-invoices-tab"" data-toggle=""tab"" data-target=""#outgoing-invoices"" href=""javascript:;"" class=""flex-1 w-32 lg:w-40 py-2 lg");
                WriteLiteral(@":py-3 whitespace-nowrap text-center active"" role=""tab"" aria-controls=""outgoing-invoices"" aria-selected=""true"">Giden Faturalar</a> <a id=""layout-1-annual-fees-tab"" data-toggle=""tab"" data-target=""#layout-1-annual-fees"" href=""javascript:;"" class=""flex-1 w-32 lg:w-40 py-2 lg:py-3 whitespace-nowrap text-center"" role=""tab"" aria-controls=""layout-1-annual-fees"" aria-selected=""false"">Gelen Faturalar</a> </div>
                            </div>


                            <!--BEGIN: Giden Faturalar-->
                            <div id=""outgoing-invoices"">

                                <div class=""intro-y box mt-5"">
                                    <div class=""flex flex-col sm:flex-row items-center p-5 border-b border-gray-200 dark:border-dark-5"">

                                        <button class=""btn btn-secondary mr-2 mb-2"" onclick=""sendInvoicesWhichUnsend()""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-l");
                WriteLiteral(@"inecap=""round"" stroke-linejoin=""round"" class=""feather feather-send w-5 h-5 mr-2""><line x1=""22"" y1=""2"" x2=""11"" y2=""13""></line><polygon points=""22 2 15 22 11 13 2 9 22 2""></polygon></svg> Gönderilmeyenleri Gönder </button>
                                        <button class=""btn btn-secondary  mr-2 mb-2"" onclick=""sendInvoicesWhichSelected()""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather feather-check-square w-5 h-5 mr-2""><polyline points=""9 11 12 14 22 4""></polyline><path d=""M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11""></path></svg> Seçili Olanları Gönder </button>
                                        <button class=""btn btn-secondary  mr-2 mb-2""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather f");
                WriteLiteral(@"eather-file-plus w-5 h-5 mr-2""><path d=""M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z""></path><polyline points=""14 2 14 8 20 8""></polyline><line x1=""12"" y1=""18"" x2=""12"" y2=""12""></line><line x1=""9"" y1=""15"" x2=""15"" y2=""15""></line></svg> Yeni Fatura </button>
                                        <button class=""btn btn-secondary  mr-2 mb-2"" onclick=""refreshInvoices()""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather feather-refresh-cw w-5 h-5 mr-2""><polyline points=""23 4 23 10 17 10""></polyline><polyline points=""1 20 1 14 7 14""></polyline><path d=""M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15""></path></svg> Yenile </button>
                                        <button class=""btn btn-secondary  mr-2 mb-2"" onclick=""openSettings()""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" s");
                WriteLiteral(@"troke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather feather-settings w-5 h-5 mr-2""><circle cx=""12"" cy=""12"" r=""3""></circle><path d=""M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z""></path></svg> Ayarlar </button>
                                        <div id=""kalanKontor"" class=""py-1 p");
                WriteLiteral(@"x-2 rounded-full text-xs bg-theme-11 text-white font-medium  mr-2 mb-2""> Kontör : </div>

                                        <div class=""w-full sm:w-auto flex items-center sm:ml-auto mt-3 sm:mt-0  mb-2"">
                                            <input data-daterange=""true"" class=""datepicker form-control w-56 block mx-auto"">
                                        </div>
                                    </div>
                                    <div class=""overflow-x-auto "">
                                        <table class=""table"" id=""invoiceTable"">
                                            <thead>
                                                <tr class=""intro-y inbox box"">
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap""></th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"" style=""display:none"">Id</th>
                                                 ");
                WriteLiteral(@"   <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Tür</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Fatura No</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Firma</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Tarih</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Toplam Tutar</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Ödenecek Tutar</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Durum</th>
                                                    <th class=""border border-b-2 dark:border-dark-5 whitespace-nowrap"">Göster</th>
              ");
                WriteLiteral(@"                                  </tr>
                                            </thead>
                                            <tbody id=""invoiceList"">
                                            </tbody>
                                        </table>
                                        <div id=""noRow"" class=""font-bold mx-auto mt-2 text-center mb-2"" style=""font-size:15px;display:none"">Kayıt Bulunamadı</div>
                                    </div>

                                </div>


                            </div>
                            <!--END: Giden Faturalar-->



                        </div>
                    </div>
                </div>
                <!-- END: Content -->
            </div>
        </div>

    </div>

    <script>
        var startDate = ""null"";
        var endDate = ""null"";
        $(function () {
         location.href = '");
#nullable restore
#line 147 "C:\Users\EarthApp\source\repos\OrderFoodAPI\OrderFoodAPI\Views\Home\Index.cshtml"
                     Write(Url.Content("swagger"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
     
        });
        function hideModal() {
            $(""[data-dismiss=modal]"").trigger({ type: ""click"" });


        }
        function showLoading(isLoading) {
            if (isLoading) {
                document.getElementById(""disable_div_menu"").style.display = ""flex"";
            } else {
                document.getElementById(""disable_div_menu"").style.display = ""none"";
            }
        }
        function refreshInvoices() {
            getInvoices(startDate, endDate);
            getKalanKontor();
        }
        function getInvoices(startDate, endDate) {
             showLoading(true)

            var tbl = $('#invoiceList');
            $.ajax({
                url: '../Home/getInvoices',
                type: 'GET',
                data: { startDate: startDate, endDate: endDate },
                contentType: 'application/json; charset=utf-8',
                success: function (result) {
                    showLoading(false)
                    var resultJson = JSON.parse(result);");
                WriteLiteral(@"

                    tbl.empty()

                    if (resultJson.length > 0) {
                        document.getElementById(""noRow"").style.display = ""none""

                        $.each(resultJson, function (key, value) {
                            var type = ""OrderFoodAPI"";
                            if (value.ApPagepType == 3) { type = ""E-Arşiv"" }
                            var showButton = `<button class=""btn btn-secondary"" disabled onclick=""showInvoice(` + value.Id + `)""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather feather-eye w-5 h-5 mr-2""><path d=""M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z""></path><circle cx=""12"" cy=""12"" r=""3""></circle></svg> Göster </button>`;

                            if (value.StateCode == 14000 || value.StateCode == 1300 ) {
                                 showButton = `<button class=""btn btn-secondary"" onclick=""");
                WriteLiteral(@"showInvoice(` + value.Id + `)""> <svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""currentColor"" stroke-width=""1.5"" stroke-linecap=""round"" stroke-linejoin=""round"" class=""feather feather-eye w-5 h-5 mr-2""><path d=""M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z""></path><circle cx=""12"" cy=""12"" r=""3""></circle></svg> Göster </button>`;

                            }
                            var InvoiceListValue = `  <tr class=""hover:bg-gray-200  inbox box"">
                                                                <td class=""border whitespace-nowrap""><input class=""form-check-input flex-none"" type=""checkbox"" style=""vertical-align: middle;""></td>
                                                                <td class=""border whitespace-nowrap"" style=""display:none"">`+ value.Id + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ type + `</td>
                                                        ");
                WriteLiteral(@"        <td class=""border whitespace-nowrap"">`+ value.InvoiceNo + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ value.Purchaser.PartyName + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ value.InvoiceDate + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ value.LineExtensionAmount + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ value.PayableAmount + `</td>
                                                                <td class=""border whitespace-nowrap"">`+ value.StateExplain + `</td>
                                                                <td class=""border whitespace-nowrap"">`+showButton+`</td>
                                                            </tr>`;

                            tbl.append(InvoiceListValue)
                        });

 ");
                WriteLiteral(@"                   } else {
                        document.getElementById(""noRow"").style.display = ""block""
                    }


                },
                error: function (errMsg) {
                    showLoading(false)
                    var errorobj = JSON.stringify(errMsg)
                    console.log(errorobj)

                }
            });
        }
        function getKalanKontor() {


            $.ajax({
                url: '../Home/getKalanKontor',
                type: 'GET',
                data: { startDate: startDate, endDate: endDate },
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    document.getElementById(""kalanKontor"").innerHTML = ""Kontör : "" + result;

                },
                error: function (errMsg) {

                    var errorobj = JSON.stringify(errMsg)
                    console.log(errorobj)

                }
            });
        }
        function setDateToTable(");
                WriteLiteral(@"_startDate, _endDate) {

            getInvoices(_startDate, _endDate);

            startDate = _startDate;
            endDate = _endDate;

            getKalanKontor();
        }
        function changeCheck() {
            document.getElementById(""check1"").checked = !document.getElementById(""check1"").checked;
        }
        function date2str(x, y) {
            var z = {
                M: x.getMonth() + 1,
                d: x.getDate(),
                h: x.getHours(),
                m: x.getMinutes(),
                s: x.getSeconds()
            };
            y = y.replace(/(M+|d+|h+|m+|s+)/g, function (v) {
                return ((v.length > 1 ? ""0"" : """") + z[v.slice(-1)]).slice(-2)
            });

            return y.replace(/(y+)/g, function (v) {
                return x.getFullYear().toString().slice(-v.length)
            });
        }
        function sendInvoicesWhichUnsend() {
            showLoading(true)
                    $.ajax({
                        url: '../Home/sendInvoices");
                WriteLiteral(@"WhichUnsend',
                        contentType: 'application/html ; charset:utf-8',
                        type: 'GET',
                        data: {  },
                        dataType: 'html',
                        success: function (result) {
                            showLoading(false)
                            //result = result.toString().replaceAll(""\"""", """")

                            var fields = result.toString().split('|');

                            var bool = fields[0];
                            var message = fields[1];





                            if (bool == 'false') {

                                Swal.fire({
                                    title: 'Hata!',
                                    text: message,
                                    icon: 'error',
                                    confirmButtonText: 'Tamam',
                                    allowOutsideClick: false
                                })
                            } else {
                ");
                WriteLiteral(@"                var a2 = JSON.parse(message);
                                var body = ``;
                                $.each(a2, function (key, value) {

                                    var bodyValue = `   <tr class=""hover:bg-gray-200 inbox box"">
                                                <td class=""border"">`+ value.invoiceNo + `</td>
                                                <td class=""border"">`+ value.state + `</td>
                                            </tr>`
                                    body += bodyValue;

                                });

                                var swal_html = ` <table class=""table"">
                                            <thead>
                                                <tr class=""inbox box"">
                                                    <th class=""border border-b-2 dark:border-dark-5"">Fatura No</th>
                                                    <th class=""border border-b-2 dark:border-dark-5"">Sonuç</th>
             ");
                WriteLiteral(@"                                   </tr>
                                            </thead>
                                            <tbody>
                                                `+ body + `
                                            </tbody>
                                        </table>`;

                                Swal.fire({
                                    title: 'Başarılı!',
                                    text: message,
                                    icon: 'success',
                                    html: swal_html,
                                    width: '800px',
                                    confirmButtonText: 'Tamam',
                                    allowOutsideClick: false
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        refreshInvoices();

                                    }
                                })
                            }
");
                WriteLiteral(@"

                        },
                        error: function (errMsg) {
                            showLoading(false)
                            Swal.fire({
                                title: 'Hata!',
                                text: JSON.stringify(errMsg),
                                icon: 'error',
                                confirmButtonText: 'Tamam',
                                allowOutsideClick: false
                            })

                        }
                    });
        }
        function sendInvoicesWhichSelected() {

            showLoading(true)
            const invoiceIds = [];
            var table = document.getElementById(""invoiceTable"");
            for (var i = 1, row; row = table.rows[i]; i++) {

                if (row.cells[0].children[0].checked) {

                    invoiceIds.push(row.cells[1].innerHTML)
                }

            }

            $.ajax({
                url: '../Home/sendInvoicesWhichSelected',
                conte");
                WriteLiteral(@"ntType: 'application/html ; charset:utf-8',
                type: 'GET',
                traditional: true,
                data: { invoiceIds: invoiceIds},
                dataType: 'html',
                success: function (result) {
                    showLoading(false)
                    //result = result.toString().replaceAll(""\"""", """")

                    var fields = result.toString().split('|');

                    var bool = fields[0];
                    var message = fields[1];





                    if (bool == 'false') {

                        Swal.fire({
                            title: 'Hata!',
                            text: message,
                            icon: 'error',
                            confirmButtonText: 'Tamam',
                            allowOutsideClick: false
                        })
                    } else {
                        var a2 = JSON.parse(message);
                        var body = ``;
                        $.each(a2, function (key, valu");
                WriteLiteral(@"e) {

                            var bodyValue = `   <tr class=""hover:bg-gray-200 inbox box"">
                                                <td class=""border"">`+ value.invoiceNo + `</td>
                                                <td class=""border"">`+ value.state + `</td>
                                            </tr>`
                            body += bodyValue;

                        });

                        var swal_html = ` <table class=""table"">
                                            <thead>
                                                <tr class=""inbox box"">
                                                    <th class=""border border-b-2 dark:border-dark-5"">Fatura No</th>
                                                    <th class=""border border-b-2 dark:border-dark-5"">Sonuç</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                         ");
                WriteLiteral(@"       `+ body + `
                                            </tbody>
                                        </table>`;

                        Swal.fire({
                            title: 'Başarılı!',
                            text: message,
                            icon: 'success',
                            width: '800px',
                            html: swal_html,
                            confirmButtonText: 'Tamam',
                            allowOutsideClick: false
                        }).then((result) => {
                            if (result.isConfirmed) {
                                refreshInvoices();
                            }
                        })
                    }


                },
                error: function (errMsg) {
                    showLoading(false)
                    Swal.fire({
                        title: 'Hata!',
                        text: JSON.stringify(errMsg),
                        icon: 'error',
                        confirmB");
                WriteLiteral(@"uttonText: 'Tamam',
                        allowOutsideClick: false
                    })

                }
            });

        }
        function openSettings() {
            Swal.fire({
                text: 'Yetkili Şifresini Giriniz',
                input: 'text',
                inputAttributes: {
                    autocapitalize: 'off'
                },
                confirmButtonText: 'Giriş Yap',
                showLoaderOnConfirm: true,
                allowOutsideClick: false,
                preConfirm: (login) => {
                    if (login == ""liwa"" || login == ""LİWA"") {
                        location.href = '");
#nullable restore
#line 469 "C:\Users\EarthApp\source\repos\OrderFoodAPI\OrderFoodAPI\Views\Home\Index.cshtml"
                                    Write(Url.Action("Settings", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                    } else {
                        Swal.fire({
                            title: 'Uyarı!',
                            text: 'Girilen Şifre Yanlış!',
                            icon: 'error',
                            confirmButtonText: 'Tamam',
                            allowOutsideClick: false
                        })
                    }

                },
                allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                if (result.isConfirmed) {

                }
            })
        }
        function showInvoice(id) {
            showLoading(true)
            $.ajax({
                url: '../Home/showInvoice',
                contentType: 'application/html ; charset:utf-8',
                type: 'GET',
                data: { id: id},
                dataType: 'html',
                success: function (result) {
                    showLoading(false)
                    //result = result.toString().replaceAll(""\"""", """")

      ");
                WriteLiteral(@"              var fields = result.toString().split('|');

                    var bool = fields[0];
                    var message = fields[1];





                    if (bool == 'false') {

                        Swal.fire({
                            title: 'Hata!',
                            text: message,
                            icon: 'error',
                            confirmButtonText: 'Tamam',
                            allowOutsideClick: false
                        })
                    } else {


                        var div = document.createElement(""div"");
                        var iframe = document.createElement(""iframe"");
                        iframe.srcdoc = message;
                        iframe.style.width = ""850px"";
                        iframe.style.height = ""500px"";
                        div.append(iframe);

                        var buttons = document.createElement(""div"");

                        buttons.innerHTML = '<button type=""button"" role=""button"" style=""");
                WriteLiteral(@""" tabindex=""0"" class=""SwalBtn1"">' + 'Tamam' + '</button>' +
                            '<button type=""button"" role=""button"" tabindex=""0"" class=""SwalBtn2"">' + 'Yazdır' + '</button>';
                        div.append(buttons);
                        $(document).on('click', '.SwalBtn1', function () {
                            //Some code 1
                            console.log('Button 1');
                            swal.clickConfirm();
                        });
                        $(document).on('click', '.SwalBtn2', function () {
                            //Some code 2
                            console.log('Button 2');
                            swal.clickConfirm();
                        });

                        Swal.fire({
                            html: div,
                            width: 'auto',
                            confirmButtonText: 'Tamam',
                            denyButtonText: 'Yazdır',
                            allowOutsideClick: false,
                   ");
                WriteLiteral(@"         closeClick: false,
                            closeOnClickOutside: false,
                            confirmButtonColor: ""#b30000"",
                            denyButtonColor: ""#00b300"",
                            showDenyButton: true,
                        }).then((result) => {
                            if (result.isConfirmed) {

                            } else if (result.isDenied) {
                                //var w = window.open();
                                //w.document.write(message);
                                //w.window.print();
                                //w.document.close();


                                iframe.focus();
                                iframe.contentWindow.print();
                                return false

                            }

                        })



                    }


                },
                error: function (errMsg) {
                    showLoading(false)
                    Swal.fire({
                ");
                WriteLiteral(@"        title: 'Hata!',
                        text: JSON.stringify(errMsg),
                        icon: 'error',
                        confirmButtonText: 'Tamam',
                        allowOutsideClick: false
                    })

                }
            });
        }

        function createButton(text, cb) {
            return $('<button>' + text + '</button>').on('click', cb);
        }
    </script>
    <!-- BEGIN: JS Assets-->
    <script src=""https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js""></script>
    <script src=""dist/js/app.js""></script>
    <!-- END: JS Assets-->

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
